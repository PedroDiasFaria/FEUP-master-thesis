%bibtex entries 

@Misc{kn:LAVA,
 author       = "Linaro",
 title        = "Linaro Automated Validation Architecture (LAVA)",
 howpublished = "\url{https://wiki.linaro.org/LAVA}",
 month		  = "June",
 year         = 2016
}

@Misc{kn:Jenkins,
 author       = "JenkinsCI",
 title        = "Jenkins Continuous Integration Tool",
 howpublished = "\url{https://jenkins.io/}",
 month		  = "June",
 year         = 2016
}

@Misc{perforce,
 author			= "Perforce",
 title 			= "Perforce Software - proprietary revision control",
 howpublished 	= "\url{https://www.perforce.com/}",
 month 			= "June",
 year 			= 2016
}

@Misc{jksn:myplugin,
 author			= {Pedro Faria},
 title			= {Filtered Views Dashboard Plugin - Jenkins},
 howpublished	= {\url{https://wiki.jenkins-ci.org/display/JENKINS/Filtered+Views+Dashboard+Plugin}},
 year			= {2017}
}

@Misc{snps:pciConsortium,
author			= {PCI-SIG},
title			= {PCIE Consortium, Compliance Workshop},
howpublished	= {\url{https://pcisig.com}}
}

@Misc{snps:hdmiConsortium,
author			= {HDMI Licensing Administrator, Inc},
title			= {HDMI Consortium, Test compliance requirements},
howpublished	= {\url{http://www.hdmi.org/manufacturer/testing_policies.aspx}}
}

@Misc{snps:ipInitiative,
author			= {Bryon Moyer},
title			= {Synopsys’s IP Initiative},
howpublished	= {\url{http://www.eejournal.com/blog/synopsyss-ip-initiative/}}
}

@Misc{jkns:metadata,
 author			= {{Robert Sandell} and {Tomas Westling}},
 title			= {Metadata Plugin - Jenkins},
 howpublished	= {\url{https://wiki.jenkins-ci.org/display/JENKINS/Metadata+Plugin}},
 year			= {2012}
}

@Misc{jkns:missionC,
 author			= {Andrey Shevtsov},
 title			= {Mission Control Plugin - Jenkins},
 howpublished	= {\url{https://wiki.jenkins-ci.org/display/JENKINS/Mission+Control+Plugin}},
 year			= {2015}
}

@Misc{jnks:ViewObj,
 author			= {Kohsuke Kawaguchi},
 title			= {Jenkins Class View},
 howpublished	= {\url{http://javadoc.jenkins.io/hudson/model/View.html}}
}

@Misc{jnks:automatedPipeline,
 author			= {Oleg Nenashev},
 title			= {Automating test runs on hardware with Pipeline as Code},
 howpublished	= {\url{https://jenkins.io/blog/2016/04/07/pipeline-for-runs-on-hardware/}},
 year			= {2016},
 month			= {April},
 day			= {7}
}

@Misc{jnks:pipeline,
 author			= {Jenkins CI},
 title 			= {Jenkins Pipeline},
 howpublished	= {\url{https://jenkins.io/doc/book/pipeline/}}
}

@Misc{jnks:dsl,
  author 		= {{Justin Ryan} and {Andrew Harmel-Law} and {Daniel Spilker} and {Matt Sheehan}},
  title			= {Job DSL Plugin - Jenkins},
  howpublished	= {\url{https://wiki.jenkins-ci.org/display/JENKINS/Job+DSL+Plugin}}
}

@Misc{jnks:durableTask,
  author		= {Jesse Glick},
  title			= {Durable Task Plugin - Jenkins},
  howpublished  = {\url{https://wiki.jenkins-ci.org/display/JENKINS/Durable+Task+Plugin}}
}

@Misc{jnks:extensionpoints,
  author 		= {Jenkins CI},
  title			= {Jenkins Extension Points},
  howpublished	= {\url{https://wiki.jenkins-ci.org/display/JENKINS/Extension+points}}
}

@book{GradyBooch,
  author    = {Grady Booch}, 
  title     = {Object-Oriented Analysis and Design with applications},
  publisher = {Addison-Wesley},
  year      = {1994},
  edition   = {2}
}

@book{KentBeck,
  author    = {Kent Beck}, 
  title     = {Extreme Programming Explained: Embrace Change},
  publisher = {Addison-Wesley Professional},
  year      = {1999}
}

@book{CIimproveSQRR,
  author    = {{Paul M. Duvall} and {Steve Matyas} and {Andrew Glover}}, 
  title     = {Continuous Integration: Improving Software Quality and Reducing Risk},
  publisher = {Addison-Wesley},
  year      = {2007}
}

@Misc{datatables,
  author 		= {Ltd, SpryMedia},
  title			= {DataTables, Table plug-in for jQuery},
  howpublisshed	= {\url{https://datatables.net/}}
}

@Misc{jelly,
  author 		= {Software Foundation, The Apache},
  title			= {Jelly: Executable XML},
  howpublished	= {\url{http://commons.apache.org/proper/commons-jelly/}}
}

@Misc{TroyScott,
 author			= {Troy Scott},
 title			= {Modern FPGA-Based Prototyping Systems Accelerate the Transition from Stand-Alone IP Block Validation to Integrated Systems},
 howpublished	= {\url{https://www.synopsys.com/designware-ip/newsletters/technical-bulletin/modern-prototyping-systems.html}}
}

@Misc{Gupta11titleantares,
    author = {Shekhar Gupta and Msc Presentation and Prof Dr and Ir. Arjan and J. C. Van Gemund and Prof Dr and C. Witteveen and Dr. Ir and Rui Abreu and Dr. Ir and Stefan Dulman},
    title = {ANTARES: Automatic Diagnosis of Software/Hardware Systems},
    year = {2011}
}

@Misc{dashboard,
 author = {Wikipedia},
 title  = {Dashboard (business) --- {W}ikipedia{,} The Free Encyclopedia},
 howpublished 	= {\url{https://en.wikipedia.org/wiki/Dashboard_(business)}}
}

@Misc{PHY,
 author = {Wikipedia},
 title  = {PHY (chip) --- {W}ikipedia{,} The Free Encyclopedia},
 howpublished 	= {\url{https://en.wikipedia.org/wiki/PHY_(chip)}}
}

@Misc{sns:ARC,
 author			= {Synopsys},
 title			= {DesignWare ARC Processor Cores},
 howpublished	= {\url{https://www.synopsys.com/designware-ip/processor-solutions/arc-processors.html}}}

@Misc{sns:PCIE,
 author			= {Synopsys},
 title			= {DesignWare IP Solutions for PCI Express},
 howpublished	= {\url{https://www.synopsys.com/designware-ip/interface-ip/pci-express.html}}}
 
 @Misc{wik:PCIE,
 author			= {Wikipedia},
 title			= {PCI Express --- {W}ikipedia{,} The Free Encyclopedia},
 howpublished	= {\url{https://en.wikipedia.org/wiki/PCI_Express}}}
 
@Misc{HAPS,
 author			= {Synopsys},
 title			= {HAPS® Family of Physical Prototyping Solutions - Physical Prototyping Made Easy},
 howpublished	= {\url{https://www.synopsys.com/verification/prototyping/physical-prototyping/haps.html}}}

@article{ShixiaoYan2015,
author = {{Shixiao Yan} and {Yu Zhao} and {Ping Chen}},
doi = {10.1109/CSTIC.2015.7153445},
isbn = {978-1-4799-7241-8},
journal = {2015 China Semiconductor Technology International Conference},
pages = {1--3},
title = {{Automated test platform for FPGA Software Validation}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7153445},
year = {2015}
}
@inproceedings{Armenise2015,
author = {Armenise, Valentina},
booktitle = {2015 IEEE/ACM 3rd International Workshop on Release Engineering},
doi = {10.1109/RELENG.2015.19},
isbn = {978-1-4673-7070-7},
month = {may},
pages = {24--27},
publisher = {IEEE},
title = {{Continuous Delivery with Jenkins: Jenkins Solutions to Implement Continuous Delivery}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7169448},
year = {2015}
}
@article{Chen2015,
author = {Chen, Lianping},
doi = {10.1109/MS.2015.27},
issn = {0740-7459},
journal = {IEEE Software},
month = {mar},
number = {2},
pages = {50--54},
title = {{Continuous Delivery: Huge Benefits, but Challenges Too}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7006384},
volume = {32},
year = {2015}
}
@inproceedings{Puri-Jobi2015,
author = {Puri-Jobi, Stephan},
booktitle = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
doi = {10.1109/ICSTW.2015.7107414},
isbn = {978-1-4799-1885-0},
month = {apr},
pages = {1--4},
publisher = {IEEE},
title = {{Test Automation for NFC ICs using Jenkins and NUnit}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7107414},
year = {2015}
}
@inproceedings{Abdul2012,
abstract = {If one is working in isolation, Continuous Integration may not be good for him or her. However, not many of us have the lavishness of working alone in software development. Most software development are done in a team, leveraging on diverse functional groups delivering different modules or subsystem. In an enterprise where development of software involves a collection of developers working on modules, integration management is absolutely a necessity; we need to find ways to work efficiently and effectively to make the long and heavy integration process to a simpler and joyful task. The value of an integrated, streamlined build process is something that any software engineers would immediately recognize, all this needs lead us to the philosophy of Continuous Integration. It is the intent of this paper to illustrate a journey and learning process in setting up a Continuous Integration for a software group.},
author = {Abdul, Fazreil Amreen and Fhang, Mensely Cheah Siow},
booktitle = {ICIMTR 2012 - 2012 International Conference on Innovation, Management and Technology Research},
doi = {10.1109/ICIMTR.2012.6236372},
isbn = {9781467306553},
keywords = {Build Process,Continuous Integration,Software Configuration Management},
title = {{Implementing continuous integration towards rapid application development}},
year = {2012}
}
@inproceedings{Soni2015,
author = {Soni, Mitesh},
booktitle = {2015 IEEE International Conference on Cloud Computing in Emerging Markets (CCEM)},
doi = {10.1109/CCEM.2015.29},
isbn = {978-1-4673-8566-4},
month = {nov},
pages = {85--89},
publisher = {IEEE},
title = {{End to End Automation On Cloud with Build Pipeline- The case for DevOps in Insurance Industry}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=7436936},
year = {2015}
}

@article{Abarbanel,
abstract = {In SoC, key infrastructure/backbone flows are distributed across many IPs and involve tight firmware and hardware interaction. Examples include resets, power management, security, and more. Traditional hardware validation techniques are no-longer adequate for such flows, due to the short time-to-market requirements, in particular, for mobile devices. In this paper, we articulate the challenges and discuss a few solution directions that are being pursued in this space at Intel.},
author = {Abarbanel, Yael and Singerman, Eli and Vardi, Moshe Y},
doi = {10.1145/2593069.2596692},
keywords = {Algorithms,Debug,Design,Design Aids – optimization,Documentation,Emulation,FPGA,Flows,Formal Analysis,Hardware-Software co-validation,Measurement,Performance,Simulation,SoC,Standardization,Theory Keywords Validation,Virtual Platform,simulation,verification J6 [Computer-aided engineering]},
title = {{Validation of SoC Firmware-Hardware Flows: Challenges and Solution Directions}},
url = {http://dx.doi.org/10.1145/2593069.2596692}
}

@inproceedings{Liu2009,
abstract = {The quality of service oriented architecture (SOA) solutions is becoming more and more important along with the increasing adoption of SOA. Continuous integration testing (CIT) is an effective technology to discover bugs as early as possible. However, the diversity of programming models used in an SOA solution and the distribution nature of an SOA solution pose new challenges for CIT. Existing testing frameworks more focus on the integration testing of applications developed by a single programming model. In this paper, a unified test framework is proposed to overcome these limitations and enable the CIT of SOA solutions across the whole development lifecycle. This framework is designed following the model driven architecture (MDA). The information of an executable test case is separated into two layers: the behavior layer and the configuration layer. The behavior layer represents the test logic of a test case and is platform independent. The configuration layer contains the platform specific information and is configurable for different programming models. An extensible and pluggable test execution engine is specially designed to execute the integration test cases. A global test case identifier instrumentation approach is used to merge the distributed test case execution traces captured by ITCAM - an IBM integrated management tool. A verification approach supporting Boolean expression and back-end service interaction verification is proposed to verify the test execution result. Initial experiments have shown the effectiveness of this unified test framework.},
author = {Liu, Hehui and Li, Zhongjie and Zhu, Jun and Tan, Huafang and Huang, Heyuan},
booktitle = {2009 IEEE International Conference on Web Services},
doi = {10.1109/ICWS.2009.28},
isbn = {978-0-7695-3709-2},
month = {jul},
pages = {880--887},
publisher = {IEEE},
title = {{A Unified Test Framework for Continuous Integration Testing of SOA Solutions}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5175909},
year = {2009}
}